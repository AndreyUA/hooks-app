{"version":3,"sources":["components/Navbar.js","components/Card.js","context/alert/alerctContext.js","context/github/githubContext.js","components/Search.js","pages/Home.js","pages/About.js","components/Repos.js","pages/Profile.js","components/Alert.js","context/alert/alertRecuder.js","context/types.js","context/alert/AlertState.js","context/github/githubReducer.js","context/github/githubState.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","exact","Card","user","src","avatar_url","alt","login","AlertContext","createContext","GithubContext","Search","useState","value","setValue","alert","useContext","github","type","placeholder","onKeyPress","e","key","clearUsers","trim","hide","search","show","onChange","target","Home","loading","users","map","id","About","Repos","repos","repo","index","href","html_url","rel","name","Profile","match","getUser","getRepos","urlName","params","useEffect","company","location","bio","blog","followers","following","public_repos","public_gists","style","width","Alert","role","text","onClick","aria-label","aria-hidden","handlers","state","action","payload","alertReducer","DEFAULT","AlertState","children","useReducer","dispatch","Provider","githubReducer","withCreds","url","process","GithubState","a","setLoading","axios","get","response","data","items","App","path","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8NAGaA,EAAS,kBACpB,yBAAKC,UAAU,kDACb,yBAAKA,UAAU,gBAAf,iBACA,wBAAIA,UAAU,cACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASC,GAAG,IAAIC,OAAK,EAACF,UAAU,YAAhC,+CAIF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASC,GAAG,SAASD,UAAU,YAA/B,oECVKG,EAAO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrB,OACE,yBAAKJ,UAAU,QACb,yBAAKK,IAAKD,EAAKE,WAAYC,IAAKH,EAAKI,MAAOR,UAAU,iBACtD,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAcI,EAAKI,OACjC,kBAAC,IAAD,CAAMP,GAAI,YAAcG,EAAKI,MAAOR,UAAU,mBAA9C,iD,QCPKS,EAAeC,0BCAfC,EAAgBD,0BCEhBE,EAAS,WAAO,IAAD,EACAC,mBAAS,IADT,mBACnBC,EADmB,KACZC,EADY,KAGpBC,EAAQC,qBAAWR,GACnBS,EAASD,qBAAWN,GAiB1B,OACE,yBAAKX,UAAU,cACb,2BACEmB,KAAK,OACLnB,UAAU,eACVoB,YAAY,4IACZC,WArBW,SAACC,GACF,UAAVA,EAAEC,MAINL,EAAOM,aAEHV,EAAMW,QACRT,EAAMU,OACNR,EAAOS,OAAOb,EAAMW,SAEpBT,EAAMY,KAAK,8JAWTd,MAAOA,EACPe,SAAU,SAACP,GAAD,OAAOP,EAASO,EAAEQ,OAAOhB,YC5B9BiB,EAAO,WAAO,IAAD,EACGd,qBAAWN,GAA9BqB,EADgB,EAChBA,QAASC,EADO,EACPA,MAEjB,OACE,oCACE,kBAAC,EAAD,MACA,yBAAKjC,UAAU,OACZgC,EACC,uBAAGhC,UAAU,eAAb,uDAEAiC,EAAMC,KAAI,SAAC9B,GAAD,OACR,yBAAKJ,UAAU,gBAAgBuB,IAAKnB,EAAK+B,IACvC,kBAAC,EAAD,CAAM/B,KAAMA,WCfbgC,EAAQ,WACnB,OACE,yBAAKpC,UAAU,6BACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,aAAd,kBACA,uBAAGA,UAAU,QAAb,mDCLKqC,EAAQ,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,OACE,oCACGA,EAAMJ,KAAI,SAACK,EAAMC,GAChB,OACE,yBAAKxC,UAAU,YAAYuB,IAAKiB,GAC9B,yBAAKxC,UAAU,aACb,4BACE,uBACEyC,KAAMF,EAAKG,SACXZ,OAAO,SACPa,IAAI,uBAEHJ,EAAKK,cCVXC,EAAU,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACgB7B,qBAAWN,GAAvDoC,EAD4B,EAC5BA,QAASC,EADmB,EACnBA,SAAUhB,EADS,EACTA,QAAS5B,EADA,EACAA,KAAMkC,EADN,EACMA,MACpCW,EAAUH,EAAMI,OAAON,KAQ7B,GANAO,qBAAU,WACRJ,EAAQE,GACRD,EAASC,KAER,IAECjB,EACF,OAAO,uBAAGhC,UAAU,eAAb,uDAX2B,IAelC4C,EAYExC,EAZFwC,KACAQ,EAWEhD,EAXFgD,QACA9C,EAUEF,EAVFE,WACA+C,EASEjD,EATFiD,SACAC,EAQElD,EARFkD,IACAC,EAOEnD,EAPFmD,KACA/C,EAMEJ,EANFI,MACAkC,EAKEtC,EALFsC,SACAc,EAIEpD,EAJFoD,UACAC,EAGErD,EAHFqD,UACAC,EAEEtD,EAFFsD,aACAC,EACEvD,EADFuD,aAGF,OACE,oCACE,kBAAC,IAAD,CAAM1D,GAAG,IAAID,UAAU,gBAAvB,2DAIA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,wBACb,yBAAKK,IAAKC,EAAYC,IAAKqC,EAAMgB,MAAO,CAAEC,MAAO,WACjD,4BAAKjB,GACJS,GAAY,oHAAoBA,IAEnC,yBAAKrD,UAAU,OACZsD,GACC,oCACE,mCADF,IACe,2BAAIA,IAGrB,uBACEb,KAAMC,EACNC,IAAI,sBACJb,OAAO,SACP9B,UAAU,gBAJZ,yFAQA,4BACGQ,GACC,4BACG,IACD,8CAFF,IAE+BA,EAAO,KAGvC4C,GACC,4BACG,IACD,6CAFF,IAE8BA,EAAS,KAGxCG,GACC,4BACG,IACD,6CAFF,IAE8BA,EAAM,MAIxC,yBAAKvD,UAAU,uBAAf,iEAAkDwD,GAClD,yBAAKxD,UAAU,uBAAf,qDAAgDyD,GAChD,yBAAKzD,UAAU,oBAAf,uEACgB0D,GAEhB,yBAAK1D,UAAU,oBAAf,UAA0C2D,OAKlD,kBAAC,EAAD,CAAOrB,MAAOA,MCzFPwB,EAAQ,WAAO,IAAD,EACD7C,qBAAWR,GAA3BO,EADiB,EACjBA,MAAOU,EADU,EACVA,KAEf,OAAKV,EAGH,yBACEhB,UAAS,sBAAiBgB,EAAMG,MAAQ,YAA/B,sBACT4C,KAAK,SAEJ/C,EAAMgD,KACP,4BAAQC,QAASvC,EAAMP,KAAK,SAASnB,UAAU,QAAQkE,aAAW,SAChE,0BAAMC,cAAY,QAAlB,UATa,M,OCJfC,GAAQ,mBCFY,cDGV,SAACC,EAAOC,GAAR,OAAmBA,EAAOC,WAD5B,cCDY,cDGV,kBAAM,QAFR,yBAGH,SAACF,GAAD,OAAWA,KAHR,GAMDG,EAAe,SAACH,EAAOC,GAElC,OADgBF,EAASE,EAAOnD,OAASiD,EAASK,SACnCJ,EAAOC,IELXI,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAChBC,qBAAWJ,EAAc,MADT,mBACnCH,EADmC,KAC5BQ,EAD4B,KAQ1C,OACE,kBAACpE,EAAaqE,SAAd,CAAuBhE,MAAO,CAAEY,KANrB,kBAAMmD,EAAS,CAAE1D,KDPN,gBCagBS,KAJ3B,SAACoC,GAAD,IAAO7C,EAAP,uDAAc,YAAd,OACX0D,EAAS,CAAE1D,KDXW,aCWOoD,QAAS,CAAEpD,OAAM6C,WAGFhD,MAAOqD,IAChDM,I,iDCPDP,GAAQ,mBFHc,gBEIV,SAACC,EAAD,OAAUE,EAAV,EAAUA,QAAV,mBAAC,eACZF,GADW,IAEdpC,MAAOsC,EACPvC,SAAS,OAJC,cFLW,aEWV,SAACqC,EAAD,OAAUE,EAAV,EAAUA,QAAV,mBAAC,eACTF,GADQ,IAEX/B,MAAOiC,EACPvC,SAAS,OATC,cFJU,YEeV,SAACqC,EAAD,OAAUE,EAAV,EAAUA,QAAV,mBAAC,eACRF,GADO,IAEVjE,KAAMmE,EACNvC,SAAS,OAdC,cFFa,eEkBV,SAACqC,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBrC,SAAS,OAhBpC,cFNa,eEuBV,SAACqC,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBpC,MAAO,QAjBlC,yBAkBH,SAACoC,GAAD,OAAWA,KAlBR,GAqBDU,EAAgB,SAACV,EAAOC,GAEnC,OADgBF,EAASE,EAAOnD,OAASiD,EAASK,SACnCJ,EAAOC,IChBlBU,EAAY,SAACC,GACjB,MAAM,GAAN,OAAUA,EAAV,qBAJgBC,uBAIhB,0BAHoBA,6CAMTC,EAAc,SAAC,GAAkB,IAAhBR,EAAe,EAAfA,SAAe,EAQjBC,qBAAWG,EAPhB,CACnB3E,KAAM,GACN6B,MAAO,GACPD,SAAS,EACTM,MAAO,KALkC,mBAQpC+B,EARoC,KAQ7BQ,EAR6B,KAUrClD,EAAM,uCAAG,WAAOb,GAAP,eAAAsE,EAAA,6DACbC,IADa,SAGUC,IAAMC,IAC3BP,EAAU,yCAAD,OAA0ClE,EAA1C,OAJE,OAGP0E,EAHO,OAObX,EAAS,CACP1D,KHhCsB,eGiCtBoD,QAASiB,EAASC,KAAKC,QATZ,2CAAH,sDAaN3C,EAAO,uCAAG,WAAOH,GAAP,eAAAwC,EAAA,6DACdC,IADc,SAGSC,IAAMC,IAC3BP,EAAU,gCAAD,OAAiCpC,EAAjC,OAJG,OAGR4C,EAHQ,OAOdX,EAAS,CACP1D,KH9CkB,WG+ClBoD,QAASiB,EAASC,OATN,2CAAH,sDAaPzC,EAAQ,uCAAG,WAAOJ,GAAP,eAAAwC,EAAA,6DACfC,IADe,SAGQC,IAAMC,IAC3BP,EAAU,gCAAD,OAAiCpC,EAAjC,wBAJI,OAGT4C,EAHS,OAOfX,EAAS,CACP1D,KH5DmB,YG6DnBoD,QAASiB,EAASC,OATL,2CAAH,sDAeRJ,EAAa,kBAAMR,EAAS,CAAE1D,KHhEX,iBGkEjBf,EAAgCiE,EAAhCjE,KAAM6B,EAA0BoC,EAA1BpC,MAAOK,EAAmB+B,EAAnB/B,MAAON,EAAYqC,EAAZrC,QAE5B,OACE,kBAACrB,EAAcmE,SAAf,CACEhE,MAAO,CACLuE,aACA1D,SACAoB,UACAC,WACAxB,WAba,kBAAMqD,EAAS,CAAE1D,KHlEX,iBGgFnBf,OACA6B,QACAK,QACAN,YAGD2C,IC1DQgB,MApBf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,yBAAK3F,UAAU,kBACb,kBAAC,EAAD,CAAOgB,MAAO,CAAEgD,KAAM,gBACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4B,KAAK,IAAI1F,OAAK,EAAC2F,UAAW9D,IACjC,kBAAC,IAAD,CAAO6D,KAAK,SAASC,UAAWzD,IAChC,kBAAC,IAAD,CAAOwD,KAAK,iBAAiBC,UAAWhD,UCTlCiD,QACW,cAA7BC,OAAO1C,SAAS2C,UAEe,UAA7BD,OAAO1C,SAAS2C,UAEhBD,OAAO1C,SAAS2C,SAASlD,MACvB,2DCZNmD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1b49a8d8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const Navbar = () => (\r\n  <nav className=\"navbar navbar-dark bg-primary navbar-expand-lg\">\r\n    <div className=\"navbar-brand\">Github Search</div>\r\n    <ul className=\"navbar-nav\">\r\n      <li className=\"nav-item\">\r\n        <NavLink to=\"/\" exact className=\"nav-link\">\r\n          Главная\r\n        </NavLink>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <NavLink to=\"/about\" className=\"nav-link\">\r\n          Информация\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Card = ({ user }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={user.avatar_url} alt={user.login} className=\"card-img-top\" />\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{user.login}</h5>\r\n        <Link to={\"/profile/\" + user.login} className=\"btn btn-primary\">\r\n          Открыть\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nexport const AlertContext = createContext();\r\n","import { createContext } from \"react\";\r\n\r\nexport const GithubContext = createContext();\r\n","import React, { useContext, useState } from \"react\";\r\nimport { AlertContext } from \"../context/alert/alerctContext\";\r\nimport { GithubContext } from \"../context/github/githubContext\";\r\n\r\nexport const Search = () => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const alert = useContext(AlertContext);\r\n  const github = useContext(GithubContext);\r\n\r\n  const onSubmit = (e) => {\r\n    if (e.key !== \"Enter\") {\r\n      return;\r\n    }\r\n\r\n    github.clearUsers();\r\n\r\n    if (value.trim()) {\r\n      alert.hide();\r\n      github.search(value.trim());\r\n    } else {\r\n      alert.show(\"Введите данные пользователя\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        placeholder=\"Введите ник пользователя...\"\r\n        onKeyPress={onSubmit}\r\n        value={value}\r\n        onChange={(e) => setValue(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Card } from \"../components/Card\";\r\nimport { Search } from \"../components/Search\";\r\nimport { GithubContext } from \"../context/github/githubContext\";\r\n\r\nexport const Home = () => {\r\n  const { loading, users } = useContext(GithubContext);\r\n\r\n  return (\r\n    <>\r\n      <Search />\r\n      <div className=\"row\">\r\n        {loading ? (\r\n          <p className=\"text-center\">Загрузка...</p>\r\n        ) : (\r\n          users.map((user) => (\r\n            <div className=\"col-sm-4 mb-4\" key={user.id}>\r\n              <Card user={user} />\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const About = () => {\r\n  return (\r\n    <div className=\"jumbotron jumbotron-fluid\">\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4\">React-hook app</h1>\r\n        <p className=\"lead\">React-hook app for browsing github accounts.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Repos = ({ repos }) => {\r\n  return (\r\n    <>\r\n      {repos.map((repo, index) => {\r\n        return (\r\n          <div className=\"card mb-3\" key={index}>\r\n            <div className=\"card-body\">\r\n              <h5>\r\n                <a\r\n                  href={repo.html_url}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  {repo.name}\r\n                </a>\r\n              </h5>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Repos } from \"../components/Repos\";\r\nimport { GithubContext } from \"../context/github/githubContext\";\r\n\r\nexport const Profile = ({ match }) => {\r\n  const { getUser, getRepos, loading, user, repos } = useContext(GithubContext);\r\n  const urlName = match.params.name;\r\n\r\n  useEffect(() => {\r\n    getUser(urlName);\r\n    getRepos(urlName);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <p className=\"text-center\">Загрузка...</p>;\r\n  }\r\n\r\n  const {\r\n    name,\r\n    company,\r\n    avatar_url,\r\n    location,\r\n    bio,\r\n    blog,\r\n    login,\r\n    html_url,\r\n    followers,\r\n    following,\r\n    public_repos,\r\n    public_gists,\r\n  } = user;\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/\" className=\"btn btn-link\">\r\n        На главную\r\n      </Link>\r\n\r\n      <div className=\"card mb-4\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-3 text-center\">\r\n              <img src={avatar_url} alt={name} style={{ width: \"150px\" }} />\r\n              <h1>{name}</h1>\r\n              {location && <p>Местоположение: {location}</p>}\r\n            </div>\r\n            <div className=\"col\">\r\n              {bio && (\r\n                <>\r\n                  <h3>BIO</h3> <p>{bio}</p>\r\n                </>\r\n              )}\r\n              <a\r\n                href={html_url}\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n                className=\"btn btn-dark\"\r\n              >\r\n                Открыть профиль\r\n              </a>\r\n              <ul>\r\n                {login && (\r\n                  <li>\r\n                    {\" \"}\r\n                    <strong>Username: </strong> {login}{\" \"}\r\n                  </li>\r\n                )}\r\n                {company && (\r\n                  <li>\r\n                    {\" \"}\r\n                    <strong>Company: </strong> {company}{\" \"}\r\n                  </li>\r\n                )}\r\n                {blog && (\r\n                  <li>\r\n                    {\" \"}\r\n                    <strong>Website: </strong> {blog}{\" \"}\r\n                  </li>\r\n                )}\r\n              </ul>\r\n              <div className=\"badge badge-primary\">Подписчики: {followers}</div>\r\n              <div className=\"badge badge-success\">Подписан: {following}</div>\r\n              <div className=\"badge badge-info\">\r\n                Репозитории: {public_repos}\r\n              </div>\r\n              <div className=\"badge badge-dark\">Gists: {public_gists}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Repos repos={repos} />\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AlertContext } from \"../context/alert/alerctContext\";\r\n\r\nexport const Alert = () => {\r\n  const { alert, hide } = useContext(AlertContext);\r\n\r\n  if (!alert) return null;\r\n\r\n  return (\r\n    <div\r\n      className={`alert alert-${alert.type || \"secondary\"} alert-dismissible`}\r\n      role=\"alert\"\r\n    >\r\n      {alert.text}\r\n      <button onClick={hide} type=\"button\" className=\"close\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import { SHOW_ALERT, HIDE_ALERT } from \"../types\";\r\n\r\nconst handlers = {\r\n  [SHOW_ALERT]: (state, action) => action.payload,\r\n  [HIDE_ALERT]: () => null,\r\n  DEFAULT: (state) => state,\r\n};\r\n\r\nexport const alertReducer = (state, action) => {\r\n  const handler = handlers[action.type] || handlers.DEFAULT;\r\n  return handler(state, action);\r\n};\r\n","export const SHOW_ALERT = \"SHOW_ALERT\";\r\nexport const HIDE_ALERT = \"HIDE_ALERT\";\r\nexport const CLEAR_USERS = \"CLEAR_USERS\";\r\nexport const GET_REPOS = \"GET_REPOS\";\r\nexport const GET_USER = \"GET_USER\";\r\nexport const SEARCH_USERS = \"SEARCH_USERS\";\r\nexport const SET_LOADING = \"SET_LOADING\";\r\n","import React, { useReducer } from \"react\";\r\nimport { HIDE_ALERT, SHOW_ALERT } from \"../types\";\r\nimport { AlertContext } from \"./alerctContext\";\r\nimport { alertReducer } from \"./alertRecuder\";\r\n\r\nexport const AlertState = ({ children }) => {\r\n  const [state, dispatch] = useReducer(alertReducer, null);\r\n\r\n  const hide = () => dispatch({ type: HIDE_ALERT });\r\n\r\n  const show = (text, type = \"secondary\") =>\r\n    dispatch({ type: SHOW_ALERT, payload: { type, text } });\r\n\r\n  return (\r\n    <AlertContext.Provider value={{ hide, show, alert: state }}>\r\n      {children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n","import {\r\n  CLEAR_USERS,\r\n  GET_REPOS,\r\n  GET_USER,\r\n  SEARCH_USERS,\r\n  SET_LOADING,\r\n} from \"../types\";\r\n\r\nconst handlers = {\r\n  [SEARCH_USERS]: (state, { payload }) => ({\r\n    ...state,\r\n    users: payload,\r\n    loading: false,\r\n  }),\r\n  [GET_REPOS]: (state, { payload }) => ({\r\n    ...state,\r\n    repos: payload,\r\n    loading: false,\r\n  }),\r\n  [GET_USER]: (state, { payload }) => ({\r\n    ...state,\r\n    user: payload,\r\n    loading: false,\r\n  }),\r\n  [SET_LOADING]: (state) => ({ ...state, loading: true }),\r\n  [CLEAR_USERS]: (state) => ({ ...state, users: [] }),\r\n  DEFAULT: (state) => state,\r\n};\r\n\r\nexport const githubReducer = (state, action) => {\r\n  const handler = handlers[action.type] || handlers.DEFAULT;\r\n  return handler(state, action);\r\n};\r\n","import React, { useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport { GithubContext } from \"./githubContext\";\r\nimport { githubReducer } from \"./githubReducer\";\r\nimport {\r\n  CLEAR_USERS,\r\n  GET_REPOS,\r\n  GET_USER,\r\n  SEARCH_USERS,\r\n  SET_LOADING,\r\n} from \"../types\";\r\n\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\r\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\r\n\r\nconst withCreds = (url) => {\r\n  return `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`;\r\n};\r\n\r\nexport const GithubState = ({ children }) => {\r\n  const initialState = {\r\n    user: {},\r\n    users: [],\r\n    loading: false,\r\n    repos: [],\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(githubReducer, initialState);\r\n\r\n  const search = async (value) => {\r\n    setLoading();\r\n\r\n    const response = await axios.get(\r\n      withCreds(`https://api.github.com/search/users?q=${value}&`)\r\n    );\r\n\r\n    dispatch({\r\n      type: SEARCH_USERS,\r\n      payload: response.data.items,\r\n    });\r\n  };\r\n\r\n  const getUser = async (name) => {\r\n    setLoading();\r\n\r\n    const response = await axios.get(\r\n      withCreds(`https://api.github.com/users/${name}?`)\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_USER,\r\n      payload: response.data,\r\n    });\r\n  };\r\n\r\n  const getRepos = async (name) => {\r\n    setLoading();\r\n\r\n    const response = await axios.get(\r\n      withCreds(`https://api.github.com/users/${name}/repos?per_page=5&`)\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: response.data,\r\n    });\r\n  };\r\n\r\n  const clearUsers = () => dispatch({ type: CLEAR_USERS });\r\n\r\n  const setLoading = () => dispatch({ type: SET_LOADING });\r\n\r\n  const { user, users, repos, loading } = state;\r\n\r\n  return (\r\n    <GithubContext.Provider\r\n      value={{\r\n        setLoading,\r\n        search,\r\n        getUser,\r\n        getRepos,\r\n        clearUsers,\r\n        user,\r\n        users,\r\n        repos,\r\n        loading,\r\n      }}\r\n    >\r\n      {children}\r\n    </GithubContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Navbar } from \"./components/Navbar\";\nimport { Home } from \"./pages/Home\";\nimport { About } from \"./pages/About\";\nimport { Profile } from \"./pages/Profile\";\nimport { Alert } from \"./components/Alert\";\nimport { AlertState } from \"./context/alert/AlertState\";\nimport { GithubState } from \"./context/github/githubState\";\n\nfunction App() {\n  return (\n    <GithubState>\n      <AlertState>\n        <BrowserRouter>\n          <Navbar />\n          <div className=\"container pt-4\">\n            <Alert alert={{ text: \"Test Alert\" }} />\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/profile/:name\" component={Profile} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </AlertState>\n    </GithubState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}